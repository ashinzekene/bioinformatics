def ClumpFinder(genome, L, k, t):
    """
    We defined a k-mer as a "clump" if it appears many times within a short interval of the genome.
    More formally, given integers L and t, a k-mer Pattern forms an (L, t)-clump inside a (longer)
    string Genome if there is an interval of Genome of length L in which this k-mer appears at least t times.
    """
    pattern_map = {}
    result = []
    for i in range(len(genome) - k+1):
        pattern = genome[i:i+k]
        if pattern in pattern_map:
            pattern_map[pattern].append(i)
        else:
            pattern_map[pattern]=[i]
            

    for pattern, arr in pattern_map.items():
        if len(arr) < t:
            continue
        for i in range(len(arr) - t+1):
            if arr[i+t-1] - arr[i]+k <= L:
                result.append(pattern)
                break
            
    return result


if __name__ == "__main__":
    genome = "TGTTCCGGTCCGGCGTTTGTTTGCTGATATCACTGATCGTCTACGTGATCGTCTGATCGTCTACGACGATACGGCATCCCCGCTCGACATCATAACCCCCGCGGAAAACGCGTGCACATGGTATTCGAGTACAGGGCGTTTCTGGCATGGTAGCCCTAGCAGTACGTCGTTTTGCTAGGTCCACCACTGCGCAGGGGAAACCGCCGTCGCGTCTAACCCAGCAAGAATATACTTAGATAATCGAAACGCCGGCTGAGTGAACTAGCTCTAATTGCTCGCTCCCTCCCCGCTCCCTCCCTGCAAGCATTGGGCGTGTAGAAGCAAAACCATTAGTGCCTCACCTTTCGCACACTAATTGACGGTGTTCTAATCTCGCTAAGTGATTACACCGAAGCTCTTAAGCTATCCCGTGTTTGCAGATCAGTATACCGCAGCCGGACCCCGTATGAGTCTACACTGTGGCCCATTTGGCCCATTCCCATTCACTATTAAGTATGTTGGAGGGGAAGACCCTTGGCTTTACCGGCTGAATAAGCGCGTAGTCTAAGAAAGTCGGTAAGCAATTCCGTTGATAAATTAGCTAAGCCAAAGGCAAAGCAGTACGTCAAGGTCTCATTTGGAAAATAACTTGCTCTAGTGGAGTGGCTAGGTTTGAGCCTTACCCCCATGTTGCCGAGGCAGGCGGGATAAGGGGGATCGATGATTATTACAGATTACAGGAAAATACAGGAACAAATCTTCATGAGCGTAACGGCCTATGGAGGGCTGCTTACAATTATACAATTACAATTATCAAGTCAAGGCGAATAATCATGATGTCGACGCAGTATCCGCAGTCGACTGAAAGGGAACAGGGAGTACCCGAAATTTCTTGGGCTCAGATGCAGCTATGAGTGACTATCTCGGTACATTTTGCCTCTGCGAATAACTATGGTCCCTAATGGCTAAGGGATCTCTACTTCGCAACTGACCATCACCACCCTTAAAATAAAAAAACCCTTAAAAGTCAGTCGCTCGCACGCATCGCACGCACCCTCAAAAGTATGCCATTGCCGGAACAATAGGCTCGCGCGCGAACATGGAACCATTCCAATGTTCTGTTCACGATACTGTTCACGATTACACCCTGAGGTTATCTACCAGGCAACAACGCGGGTCCCTTGAGTCCTTAATGCCTCCCACCGGGCCGTGACGTGAAAGATCGTGCGTGAAAGATTAGGTTAGCGCTGATACACGCTACGGACTGACTCCTCTTCCGATGCGGATGGTTGTAACGATTATCTCCTTCGCTAGAGGTATTGAAGCGAACTCAGGGTGGCTCGAAGCACATCTCGTACTGCGAAGAATTTCATCCCAGCCTAAGATCGGAACGTAACATGATCAGCGCCATGCGAGCGAGGTCATTGGGCAACTCTAGTGACGCCAAAAAGTGACTTTAGAGGGGGTGCACACTCCTGCTATCTCTTAACGTTGCAAGTGAATTGGTCGCTCTTGGTTGGTCGCTCTCGCTCCAGTCCAGTGTGAGTGGTAGGCTCACGAAATAATCCTATACAGAGATGATCCCCATAAACTCTATAGTGCTTGTTGTTCCTAGCTAGGTTCCTAGCCATAAATCGTATATGCGGATTTTAACTGTCGTTAGGCAGATTCGTAACGGGCATCCCATTAGTTTGCCTTTTTTCTTCTGGCCATAGGTGTAGGGTTCAAGACAGGTGAAACAAGGTGAAACAAGGTGAAACAATCGAATTCGAAGCCACCACCGAAGCCACAAGGTGAAACAAGGTGAAACAAAAACAGTAAGAAACAGTAAGAAACAGTAAGAAACAGTAAGAAACAGTAAGAAACAGTAAGAAACAGTAAGAAACAGTAAGTGCAAAGTTGTGCAAAGTTGTGCAAAGTTGTGCTGCAAAGTTGTTG"
    k = 10
    L = 24
    t = 4
    print(ClumpFinder(genome, L, k, t))